{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class DataService {\n  // Inject ApiUrl in constructor to Get it form ather Service\n  constructor(APIUrl, http) {\n    this.APIUrl = APIUrl;\n    this.http = http;\n  }\n  // Get Method\n  getAll() {\n    return this.http.get(`${this.APIUrl}/`);\n  }\n  // Get with id\n  get(id) {\n    return this.http.get(`${this.APIUrl}/${id}`);\n  }\n  // Update Method\n  Update(data) {\n    return this.http.put(`${this.APIUrl}/update-user`, data);\n  }\n  // Create Method\n  Create(user) {\n    return this.http.post(`${this.APIUrl}/register-user`, user, this.httpOptions);\n  }\n  // Delete Method\n  Delete(id) {\n    return this.http.delete(`${this.APIUrl}/delete/${id}`);\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(String), i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","httpOptions","headers","DataService","constructor","APIUrl","http","getAll","get","id","Update","data","put","Create","user","post","Delete","delete","_","i0","ɵɵinject","String","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/rhuanfelipe/repositories/infoshow-ui/infoshow-ui/src/app/services/data.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable, catchError } from 'rxjs';\nimport { User } from '../models/user';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n   // Inject ApiUrl in constructor to Get it form ather Service\n   constructor(@Inject(String) private APIUrl: string,private http: HttpClient) { }\n\n\n  // Get Method\n  getAll(): Observable<any> {\n    return this.http.get<any>(`${this.APIUrl}/`);\n  }\n  // Get with id\n  get(id: any): Observable<any> {\n    return this.http.get(`${this.APIUrl}/${id}`);\n  }\n  // Update Method\n  Update(data: any): Observable<any> {\n    return this.http.put(`${this.APIUrl}/update-user`, data);\n  }\n  // Create Method\n  Create(user: User): Observable<User> {\n    return this.http.post<User>(`${this.APIUrl}/register-user`, user, this.httpOptions);\n  }\n  // Delete Method\n  Delete(id: any): Observable<any> {\n    return this.http.delete(`${this.APIUrl}/delete/${id}`);\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IACvB,cAAc,EAAG;GAClB;CACF;AAKD,OAAM,MAAOG,WAAW;EAErB;EACAC,YAAoCC,MAAc,EAASC,IAAgB;IAAvC,KAAAD,MAAM,GAANA,MAAM;IAAiB,KAAAC,IAAI,GAAJA,IAAI;EAAgB;EAGhF;EACAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,GAAG,IAAI,CAACH,MAAM,GAAG,CAAC;EAC9C;EACA;EACAG,GAAGA,CAACC,EAAO;IACT,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACH,MAAM,IAAII,EAAE,EAAE,CAAC;EAC9C;EACA;EACAC,MAAMA,CAACC,IAAS;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACP,MAAM,cAAc,EAAEM,IAAI,CAAC;EAC1D;EACA;EACAE,MAAMA,CAACC,IAAU;IACf,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAO,GAAG,IAAI,CAACV,MAAM,gBAAgB,EAAES,IAAI,EAAE,IAAI,CAACb,WAAW,CAAC;EACrF;EACA;EACAe,MAAMA,CAACP,EAAO;IACZ,OAAO,IAAI,CAACH,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACZ,MAAM,WAAWI,EAAE,EAAE,CAAC;EACxD;EAAC,QAAAS,CAAA,G;qBAzBUf,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAGDC,MAAM,GAAAF,EAAA,CAAAC,QAAA,CAAAE,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAHhBrB,WAAW;IAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}