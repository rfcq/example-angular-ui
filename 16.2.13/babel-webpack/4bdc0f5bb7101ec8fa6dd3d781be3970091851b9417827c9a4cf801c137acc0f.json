{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = \"http://localhost:8080/users\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(`${baseUrl}/`);\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}/get-user/${id}`);\n  }\n  create(data) {\n    return this.http.post(`${baseUrl}/register-user`, data);\n  }\n  update(id, data) {\n    return this.http.put(`${baseUrl}/update-user/${id}`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}/delete/${id}`);\n  }\n  deleteAll() {\n    return this.http.delete(`${baseUrl}/delete/${id}`);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["baseUrl","UserService","constructor","http","getAll","get","id","create","data","post","update","put","delete","deleteAll","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/rhuanfelipe/repositories/infoshow-ui/infoshow-ui/src/app/services/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from '../models/user';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst baseUrl =\"http://localhost:8080/users\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<User[]> {\n    return this.http.get<User[]>(`${baseUrl}/`);\n  }\n\n  get(id: any): Observable<User> {\n    return this.http.get<User>(`${baseUrl}/get-user/${id}`);\n  }\n\n  create(data: any): Observable<any> {\n    return this.http.post(`${baseUrl}/register-user`, data);\n  }\n\n  update(id: any, data: any): Observable<any> {\n    return this.http.put(`${baseUrl}/update-user/${id}`, data);\n  }\n\n  delete(id: any): Observable<any> {\n    return this.http.delete(`${baseUrl}/delete/${id}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.http.delete(`${baseUrl}/delete/${id}`);\n  }\n}"],"mappings":";;AAKA,MAAMA,OAAO,GAAE,6BAA6B;AAK5C,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAS,GAAGL,OAAO,GAAG,CAAC;EAC7C;EAEAK,GAAGA,CAACC,EAAO;IACT,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAO,GAAGL,OAAO,aAAaM,EAAE,EAAE,CAAC;EACzD;EAEAC,MAAMA,CAACC,IAAS;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAGT,OAAO,gBAAgB,EAAEQ,IAAI,CAAC;EACzD;EAEAE,MAAMA,CAACJ,EAAO,EAAEE,IAAS;IACvB,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAC,GAAGX,OAAO,gBAAgBM,EAAE,EAAE,EAAEE,IAAI,CAAC;EAC5D;EAEAI,MAAMA,CAACN,EAAO;IACZ,OAAO,IAAI,CAACH,IAAI,CAACS,MAAM,CAAC,GAAGZ,OAAO,WAAWM,EAAE,EAAE,CAAC;EACpD;EAEAO,SAASA,CAAA;IACP,OAAO,IAAI,CAACV,IAAI,CAACS,MAAM,CAAC,GAAGZ,OAAO,WAAWM,EAAE,EAAE,CAAC;EACpD;EAAC,QAAAQ,CAAA,G;qBAzBUb,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXlB,WAAW;IAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}