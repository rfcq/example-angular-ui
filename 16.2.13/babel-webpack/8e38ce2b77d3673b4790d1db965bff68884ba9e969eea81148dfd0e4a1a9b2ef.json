{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  // Inject ApiUrl in constructor to Get it form ather Service\n  constructor(APIUrl, http) {\n    this.APIUrl = APIUrl;\n    this.http = http;\n  }\n  // Get Method\n  getAll() {\n    return this.http.get(this.APIUrl);\n  }\n  // Get with id\n  get(id) {\n    return this.http.get(`${this.APIUrl}/${id}`);\n  }\n  // Update Method\n  Update(data) {\n    return this.http.put(`${this.APIUrl}/update-user/${id}`, data);\n  }\n  // Create Method\n  Create(data) {\n    return this.http.post(this.APIUrl, data);\n  }\n  // Delete Method\n  Delete(id) {\n    return this.http.delete(`${this.APIUrl}/${id}`);\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(String), i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["DataService","constructor","APIUrl","http","getAll","get","id","Update","data","put","Create","post","Delete","delete","_","i0","ɵɵinject","String","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/rhuanfelipe/repositories/infoshow-ui/infoshow-ui/src/app/services/data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n\n   // Inject ApiUrl in constructor to Get it form ather Service\n   constructor(@Inject(String) private APIUrl: string,private http: HttpClient) { }\n\n\n  // Get Method\n  getAll(): Observable<any> {\n    return this.http.get<any>(this.APIUrl);\n  }\n  // Get with id\n  get(id: any): Observable<any> {\n    return this.http.get(`${this.APIUrl}/${id}`);\n  }\n  // Update Method\n  Update(data: any,): Observable<any> {\n    return this.http.put(`${this.APIUrl}/update-user/${id}`, data);\n  }\n  // Create Method\n  Create(data: any): Observable<any> {\n    return this.http.post(this.APIUrl, data);\n  }\n  // Delete Method\n  Delete(id: any): Observable<any> {\n    return this.http.delete(`${this.APIUrl}/${id}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGrB;EACAC,YAAoCC,MAAc,EAASC,IAAgB;IAAvC,KAAAD,MAAM,GAANA,MAAM;IAAiB,KAAAC,IAAI,GAAJA,IAAI;EAAgB;EAGhF;EACAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,IAAI,CAACH,MAAM,CAAC;EACxC;EACA;EACAG,GAAGA,CAACC,EAAO;IACT,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACH,MAAM,IAAII,EAAE,EAAE,CAAC;EAC9C;EACA;EACAC,MAAMA,CAACC,IAAS;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACP,MAAM,gBAAgBI,EAAE,EAAE,EAAEE,IAAI,CAAC;EAChE;EACA;EACAE,MAAMA,CAACF,IAAS;IACd,OAAO,IAAI,CAACL,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACT,MAAM,EAAEM,IAAI,CAAC;EAC1C;EACA;EACAI,MAAMA,CAACN,EAAO;IACZ,OAAO,IAAI,CAACH,IAAI,CAACU,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACjD;EAAC,QAAAQ,CAAA,G;qBA1BUd,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAIDC,MAAM,GAAAF,EAAA,CAAAC,QAAA,CAAAE,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAJhBpB,WAAW;IAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}